{"abi":[],"bytecode":{"object":"0x","linkReferences":{}},"deployedBytecode":{"object":"0x","linkReferences":{}},"ast":{"absolutePath":"node_modules/@latticexyz/store/src/leftMask.sol","id":15419,"exportedSymbols":{"leftMask":[15418]},"nodeType":"SourceUnit","src":"32:1059:27","nodes":[{"id":15395,"nodeType":"PragmaDirective","src":"32:25:27","nodes":[],"literals":["solidity",">=","0.8",".21"]},{"id":15418,"nodeType":"FunctionDefinition","src":"950:140:27","nodes":[],"body":{"id":15417,"nodeType":"Block","src":"1016:74:27","nodes":[],"statements":[{"id":15416,"nodeType":"UncheckedBlock","src":"1020:68:27","statements":[{"expression":{"id":15414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"1043:40:27","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":15412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":15405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1050:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":15404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1050:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":15403,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1045:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":15406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1045:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":15407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1059:3:27","memberName":"max","nodeType":"MemberAccess","src":"1045:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":15410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":15408,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15398,"src":"1067:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":15409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1080:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1067:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":15411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1066:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1045:37:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":15413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1044:39:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":15402,"id":15415,"nodeType":"Return","src":"1036:47:27"}]}]},"documentation":{"id":15396,"nodeType":"StructuredDocumentation","src":"256:693:27","text":" @notice Computes a left-aligned byte mask based on the provided byte length.\n @dev The mask is used to extract a specified number of leftmost bytes.\n      For byte lengths greater than or equal to 32, it returns the max value of type(uint256).\n      Examples:\n          length 0:   0x000000...000000\n          length 1:   0xff0000...000000\n          length 2:   0xffff00...000000\n          ...\n          length 30:  0xffffff...ff0000\n          length 31:  0xffffff...ffff00\n          length 32+: 0xffffff...ffffff\n @param byteLength The number of leftmost bytes to be masked.\n @return mask A left-aligned byte mask corresponding to the specified byte length."},"implemented":true,"kind":"freeFunction","modifiers":[],"name":"leftMask","nameLocation":"959:8:27","parameters":{"id":15399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15398,"mutability":"mutable","name":"byteLength","nameLocation":"976:10:27","nodeType":"VariableDeclaration","scope":15418,"src":"968:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15397,"name":"uint256","nodeType":"ElementaryTypeName","src":"968:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"967:20:27"},"returnParameters":{"id":15402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15401,"mutability":"mutable","name":"mask","nameLocation":"1010:4:27","nodeType":"VariableDeclaration","scope":15418,"src":"1002:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1001:14:27"},"scope":15419,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"license":"MIT"},"id":27}