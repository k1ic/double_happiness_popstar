import { Chain } from 'viem/chains';
import * as viem from 'viem';

type MUDChain = Chain & {
    faucetUrl?: string;
};

declare const latticeTestnet: {
    readonly name: "Lattice Testnet";
    readonly id: 4242;
    readonly network: "lattice-testnet";
    readonly nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Ether";
        readonly symbol: "ETH";
    };
    readonly rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://follower.testnet-chain.linfra.xyz"];
            readonly webSocket: readonly ["wss://follower.testnet-chain.linfra.xyz"];
        };
        readonly public: {
            readonly http: readonly ["https://follower.testnet-chain.linfra.xyz"];
            readonly webSocket: readonly ["wss://follower.testnet-chain.linfra.xyz"];
        };
    };
    readonly blockExplorers: {
        readonly default: {
            readonly name: "Otterscan";
            readonly url: "https://explorer.testnet-chain.linfra.xyz";
        };
    };
    readonly faucetUrl: "https://faucet.testnet-mud-services.linfra.xyz";
};

declare const mudFoundry: {
    readonly fees: {
        readonly defaultPriorityFee: () => bigint;
    };
    readonly id: 31337;
    readonly name: "Foundry";
    readonly network: "foundry";
    readonly nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Ether";
        readonly symbol: "ETH";
    };
    readonly rpcUrls: {
        readonly default: {
            readonly http: readonly ["http://127.0.0.1:8545"];
            readonly webSocket: readonly ["ws://127.0.0.1:8545"];
        };
        readonly public: {
            readonly http: readonly ["http://127.0.0.1:8545"];
            readonly webSocket: readonly ["ws://127.0.0.1:8545"];
        };
    };
    readonly formatters?: viem.ChainFormatters | undefined;
    readonly serializers?: viem.ChainSerializers<viem.ChainFormatters> | undefined;
};

export { MUDChain, latticeTestnet, mudFoundry };
