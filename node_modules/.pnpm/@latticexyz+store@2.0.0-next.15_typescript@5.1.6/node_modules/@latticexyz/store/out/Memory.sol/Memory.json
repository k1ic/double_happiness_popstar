{"abi":[],"bytecode":{"object":"0x602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000815000a","sourceMap":"282:1703:32:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;282:1703:32;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000815000a","sourceMap":"282:1703:32:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides low-level memory operations with safety checks.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Memory Operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for performing low-level memory operations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Memory.sol\":\"Memory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[\":@latticexyz/=node_modules/@latticexyz/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"src/Memory.sol\":{\"keccak256\":\"0x69295976e61a1a108d1b4d6eb497b238730309f3047c4320d48e01a0ce8d4ec7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://559c451b21fb9dd4fec27b41bef42f4362f1e7ebb7992106d548b9d4f733b3e5\",\"dweb:/ipfs/QmeSE7YTW5zUrfZYFVb2pFnDe3XxiT8XNecfwC3wfpxCRv\"]},\"src/leftMask.sol\":{\"keccak256\":\"0xd0360567e4d77c6a8e3d8a5f4bf3653ccde4d268674c50988d55695dc6193f6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53e6bcb53fcb08ee9426225fdab7c41df91e12cb4f80d92895a6117338627401\",\"dweb:/ipfs/QmeLcaPGeMBpNSTSsPYK3PHpzKuGMjuitCweAWcoXK2mXr\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.21+commit.d9974bed"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@latticexyz/=node_modules/@latticexyz/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/forge-std/src/"],"optimizer":{"enabled":true,"runs":3000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/Memory.sol":"Memory"},"libraries":{}},"sources":{"src/Memory.sol":{"keccak256":"0x69295976e61a1a108d1b4d6eb497b238730309f3047c4320d48e01a0ce8d4ec7","urls":["bzz-raw://559c451b21fb9dd4fec27b41bef42f4362f1e7ebb7992106d548b9d4f733b3e5","dweb:/ipfs/QmeSE7YTW5zUrfZYFVb2pFnDe3XxiT8XNecfwC3wfpxCRv"],"license":"MIT"},"src/leftMask.sol":{"keccak256":"0xd0360567e4d77c6a8e3d8a5f4bf3653ccde4d268674c50988d55695dc6193f6f","urls":["bzz-raw://53e6bcb53fcb08ee9426225fdab7c41df91e12cb4f80d92895a6117338627401","dweb:/ipfs/QmeLcaPGeMBpNSTSsPYK3PHpzKuGMjuitCweAWcoXK2mXr"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/Memory.sol","id":45588,"exportedSymbols":{"Memory":[45587],"leftMask":[59065]},"nodeType":"SourceUnit","src":"32:1954:32","nodes":[{"id":45531,"nodeType":"PragmaDirective","src":"32:25:32","nodes":[],"literals":["solidity",">=","0.8",".21"]},{"id":45533,"nodeType":"ImportDirective","src":"59:42:32","nodes":[],"absolutePath":"src/leftMask.sol","file":"./leftMask.sol","nameLocation":"-1:-1:-1","scope":45588,"sourceUnit":59066,"symbolAliases":[{"foreign":{"id":45532,"name":"leftMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59065,"src":"68:8:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":45587,"nodeType":"ContractDefinition","src":"282:1703:32","nodes":[{"id":45544,"nodeType":"FunctionDefinition","src":"690:151:32","nodes":[],"body":{"id":45543,"nodeType":"Block","src":"776:65:32","nodes":[],"statements":[{"AST":{"nativeSrc":"791:46:32","nodeType":"YulBlock","src":"791:46:32","statements":[{"nativeSrc":"799:32:32","nodeType":"YulAssignment","src":"799:32:32","value":{"arguments":[{"name":"data","nativeSrc":"820:4:32","nodeType":"YulIdentifier","src":"820:4:32"},{"kind":"number","nativeSrc":"826:4:32","nodeType":"YulLiteral","src":"826:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"816:3:32","nodeType":"YulIdentifier","src":"816:3:32"},"nativeSrc":"816:15:32","nodeType":"YulFunctionCall","src":"816:15:32"},"variableNames":[{"name":"memoryPointer","nativeSrc":"799:13:32","nodeType":"YulIdentifier","src":"799:13:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":45537,"isOffset":false,"isSlot":false,"src":"820:4:32","valueSize":1},{"declaration":45540,"isOffset":false,"isSlot":false,"src":"799:13:32","valueSize":1}],"id":45542,"nodeType":"InlineAssembly","src":"782:55:32"}]},"documentation":{"id":45535,"nodeType":"StructuredDocumentation","src":"301:386:32","text":" @notice Gets the actual data pointer of dynamic arrays.\n @dev In dynamic arrays, the first word stores the length of the data, after which comes the actual data.\n Example: 0x40 0x01 0x02\n          ^len ^data\n @param data The dynamic bytes data from which to get the pointer.\n @return memoryPointer The pointer to the actual data (skipping the length)."},"implemented":true,"kind":"function","modifiers":[],"name":"dataPointer","nameLocation":"699:11:32","parameters":{"id":45538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45537,"mutability":"mutable","name":"data","nameLocation":"724:4:32","nodeType":"VariableDeclaration","scope":45544,"src":"711:17:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":45536,"name":"bytes","nodeType":"ElementaryTypeName","src":"711:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"710:19:32"},"returnParameters":{"id":45541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45540,"mutability":"mutable","name":"memoryPointer","nameLocation":"761:13:32","nodeType":"VariableDeclaration","scope":45544,"src":"753:21:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45539,"name":"uint256","nodeType":"ElementaryTypeName","src":"753:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"752:23:32"},"scope":45587,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":45586,"nodeType":"FunctionDefinition","src":"1161:822:32","nodes":[],"body":{"id":45585,"nodeType":"Block","src":"1245:738:32","nodes":[],"statements":[{"body":{"id":45571,"nodeType":"Block","src":"1299:303:32","statements":[{"AST":{"nativeSrc":"1357:55:32","nodeType":"YulBlock","src":"1357:55:32","statements":[{"expression":{"arguments":[{"name":"toPointer","nativeSrc":"1374:9:32","nodeType":"YulIdentifier","src":"1374:9:32"},{"arguments":[{"name":"fromPointer","nativeSrc":"1391:11:32","nodeType":"YulIdentifier","src":"1391:11:32"}],"functionName":{"name":"mload","nativeSrc":"1385:5:32","nodeType":"YulIdentifier","src":"1385:5:32"},"nativeSrc":"1385:18:32","nodeType":"YulFunctionCall","src":"1385:18:32"}],"functionName":{"name":"mstore","nativeSrc":"1367:6:32","nodeType":"YulIdentifier","src":"1367:6:32"},"nativeSrc":"1367:37:32","nodeType":"YulFunctionCall","src":"1367:37:32"},"nativeSrc":"1367:37:32","nodeType":"YulExpressionStatement","src":"1367:37:32"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":45547,"isOffset":false,"isSlot":false,"src":"1391:11:32","valueSize":1},{"declaration":45549,"isOffset":false,"isSlot":false,"src":"1374:9:32","valueSize":1}],"id":45557,"nodeType":"InlineAssembly","src":"1348:64:32"},{"id":45570,"nodeType":"UncheckedBlock","src":"1503:93:32","statements":[{"expression":{"id":45560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45558,"name":"toPointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45549,"src":"1523:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":45559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1523:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45561,"nodeType":"ExpressionStatement","src":"1523:15:32"},{"expression":{"id":45564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45562,"name":"fromPointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45547,"src":"1548:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":45563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1563:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1548:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45565,"nodeType":"ExpressionStatement","src":"1548:17:32"},{"expression":{"id":45568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45566,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45551,"src":"1575:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3332","id":45567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1575:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45569,"nodeType":"ExpressionStatement","src":"1575:12:32"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":45554,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45551,"src":"1285:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":45555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1295:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1285:12:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":45572,"nodeType":"WhileStatement","src":"1278:324:32"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":45573,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45551,"src":"1611:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":45574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1621:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1611:11:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":45577,"nodeType":"IfStatement","src":"1607:24:32","trueBody":{"functionReturnParameters":45553,"id":45576,"nodeType":"Return","src":"1624:7:32"}},{"assignments":[45579],"declarations":[{"constant":false,"id":45579,"mutability":"mutable","name":"mask","nameLocation":"1678:4:32","nodeType":"VariableDeclaration","scope":45585,"src":"1670:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":45583,"initialValue":{"arguments":[{"id":45581,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45551,"src":"1694:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":45580,"name":"leftMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59065,"src":"1685:8:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":45582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1685:16:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1670:31:32"},{"AST":{"nativeSrc":"1755:224:32","nodeType":"YulBlock","src":"1755:224:32","statements":[{"expression":{"arguments":[{"name":"toPointer","nativeSrc":"1779:9:32","nodeType":"YulIdentifier","src":"1779:9:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"fromPointer","nativeSrc":"1855:11:32","nodeType":"YulIdentifier","src":"1855:11:32"}],"functionName":{"name":"mload","nativeSrc":"1849:5:32","nodeType":"YulIdentifier","src":"1849:5:32"},"nativeSrc":"1849:18:32","nodeType":"YulFunctionCall","src":"1849:18:32"},{"name":"mask","nativeSrc":"1869:4:32","nodeType":"YulIdentifier","src":"1869:4:32"}],"functionName":{"name":"and","nativeSrc":"1845:3:32","nodeType":"YulIdentifier","src":"1845:3:32"},"nativeSrc":"1845:29:32","nodeType":"YulFunctionCall","src":"1845:29:32"},{"arguments":[{"arguments":[{"name":"toPointer","nativeSrc":"1933:9:32","nodeType":"YulIdentifier","src":"1933:9:32"}],"functionName":{"name":"mload","nativeSrc":"1927:5:32","nodeType":"YulIdentifier","src":"1927:5:32"},"nativeSrc":"1927:16:32","nodeType":"YulFunctionCall","src":"1927:16:32"},{"arguments":[{"name":"mask","nativeSrc":"1949:4:32","nodeType":"YulIdentifier","src":"1949:4:32"}],"functionName":{"name":"not","nativeSrc":"1945:3:32","nodeType":"YulIdentifier","src":"1945:3:32"},"nativeSrc":"1945:9:32","nodeType":"YulFunctionCall","src":"1945:9:32"}],"functionName":{"name":"and","nativeSrc":"1923:3:32","nodeType":"YulIdentifier","src":"1923:3:32"},"nativeSrc":"1923:32:32","nodeType":"YulFunctionCall","src":"1923:32:32"}],"functionName":{"name":"or","nativeSrc":"1798:2:32","nodeType":"YulIdentifier","src":"1798:2:32"},"nativeSrc":"1798:167:32","nodeType":"YulFunctionCall","src":"1798:167:32"}],"functionName":{"name":"mstore","nativeSrc":"1763:6:32","nodeType":"YulIdentifier","src":"1763:6:32"},"nativeSrc":"1763:210:32","nodeType":"YulFunctionCall","src":"1763:210:32"},"nativeSrc":"1763:210:32","nodeType":"YulExpressionStatement","src":"1763:210:32"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":45547,"isOffset":false,"isSlot":false,"src":"1855:11:32","valueSize":1},{"declaration":45579,"isOffset":false,"isSlot":false,"src":"1869:4:32","valueSize":1},{"declaration":45579,"isOffset":false,"isSlot":false,"src":"1949:4:32","valueSize":1},{"declaration":45549,"isOffset":false,"isSlot":false,"src":"1779:9:32","valueSize":1},{"declaration":45549,"isOffset":false,"isSlot":false,"src":"1933:9:32","valueSize":1}],"id":45584,"nodeType":"InlineAssembly","src":"1746:233:32"}]},"documentation":{"id":45545,"nodeType":"StructuredDocumentation","src":"845:313:32","text":" @notice Copies memory from one location to another.\n @dev Safely copies memory in chunks of 32 bytes, then handles any residual bytes.\n @param fromPointer The memory location to copy from.\n @param toPointer The memory location to copy to.\n @param length The number of bytes to copy."},"implemented":true,"kind":"function","modifiers":[],"name":"copy","nameLocation":"1170:4:32","parameters":{"id":45552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45547,"mutability":"mutable","name":"fromPointer","nameLocation":"1183:11:32","nodeType":"VariableDeclaration","scope":45586,"src":"1175:19:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45546,"name":"uint256","nodeType":"ElementaryTypeName","src":"1175:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":45549,"mutability":"mutable","name":"toPointer","nameLocation":"1204:9:32","nodeType":"VariableDeclaration","scope":45586,"src":"1196:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":45551,"mutability":"mutable","name":"length","nameLocation":"1223:6:32","nodeType":"VariableDeclaration","scope":45586,"src":"1215:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1215:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1174:56:32"},"returnParameters":{"id":45553,"nodeType":"ParameterList","parameters":[],"src":"1245:0:32"},"scope":45587,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"Memory","contractDependencies":[],"contractKind":"library","documentation":{"id":45534,"nodeType":"StructuredDocumentation","src":"103:178:32","text":" @title Memory Operations\n @notice A library for performing low-level memory operations.\n @dev This library provides low-level memory operations with safety checks."},"fullyImplemented":true,"linearizedBaseContracts":[45587],"name":"Memory","nameLocation":"290:6:32","scope":45588,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":32}