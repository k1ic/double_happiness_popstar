{"abi":[{"type":"function","name":"onAfterDeleteRecord","inputs":[{"name":"tableId","type":"bytes32","internalType":"ResourceId"},{"name":"keyTuple","type":"bytes32[]","internalType":"bytes32[]"},{"name":"fieldLayout","type":"bytes32","internalType":"FieldLayout"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onAfterSetRecord","inputs":[{"name":"tableId","type":"bytes32","internalType":"ResourceId"},{"name":"keyTuple","type":"bytes32[]","internalType":"bytes32[]"},{"name":"staticData","type":"bytes","internalType":"bytes"},{"name":"encodedLengths","type":"bytes32","internalType":"PackedCounter"},{"name":"dynamicData","type":"bytes","internalType":"bytes"},{"name":"fieldLayout","type":"bytes32","internalType":"FieldLayout"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onAfterSpliceDynamicData","inputs":[{"name":"tableId","type":"bytes32","internalType":"ResourceId"},{"name":"keyTuple","type":"bytes32[]","internalType":"bytes32[]"},{"name":"dynamicFieldIndex","type":"uint8","internalType":"uint8"},{"name":"startWithinField","type":"uint40","internalType":"uint40"},{"name":"deleteCount","type":"uint40","internalType":"uint40"},{"name":"encodedLengths","type":"bytes32","internalType":"PackedCounter"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onAfterSpliceStaticData","inputs":[{"name":"tableId","type":"bytes32","internalType":"ResourceId"},{"name":"keyTuple","type":"bytes32[]","internalType":"bytes32[]"},{"name":"start","type":"uint48","internalType":"uint48"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeDeleteRecord","inputs":[{"name":"tableId","type":"bytes32","internalType":"ResourceId"},{"name":"keyTuple","type":"bytes32[]","internalType":"bytes32[]"},{"name":"fieldLayout","type":"bytes32","internalType":"FieldLayout"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeSetRecord","inputs":[{"name":"tableId","type":"bytes32","internalType":"ResourceId"},{"name":"keyTuple","type":"bytes32[]","internalType":"bytes32[]"},{"name":"staticData","type":"bytes","internalType":"bytes"},{"name":"encodedLengths","type":"bytes32","internalType":"PackedCounter"},{"name":"dynamicData","type":"bytes","internalType":"bytes"},{"name":"fieldLayout","type":"bytes32","internalType":"FieldLayout"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeSpliceDynamicData","inputs":[{"name":"tableId","type":"bytes32","internalType":"ResourceId"},{"name":"keyTuple","type":"bytes32[]","internalType":"bytes32[]"},{"name":"dynamicFieldIndex","type":"uint8","internalType":"uint8"},{"name":"startWithinField","type":"uint40","internalType":"uint40"},{"name":"deleteCount","type":"uint40","internalType":"uint40"},{"name":"encodedLengths","type":"bytes32","internalType":"PackedCounter"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeSpliceStaticData","inputs":[{"name":"tableId","type":"bytes32","internalType":"ResourceId"},{"name":"keyTuple","type":"bytes32[]","internalType":"bytes32[]"},{"name":"start","type":"uint48","internalType":"uint48"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"error","name":"StoreHook_NotImplemented","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"onAfterDeleteRecord(bytes32,bytes32[],bytes32)":"83b5c95b","onAfterSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)":"5b28cdaf","onAfterSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)":"63584533","onAfterSpliceStaticData(bytes32,bytes32[],uint48,bytes)":"a8ba8721","onBeforeDeleteRecord(bytes32,bytes32[],bytes32)":"9faeaf45","onBeforeSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)":"57066c9c","onBeforeSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)":"55eb5a28","onBeforeSpliceStaticData(bytes32,bytes32[],uint48,bytes)":"964f667d","supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"StoreHook_NotImplemented\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"onAfterDeleteRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"onAfterSetRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint40\",\"name\":\"startWithinField\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"deleteCount\",\"type\":\"uint40\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onAfterSpliceDynamicData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onAfterSpliceStaticData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"onBeforeDeleteRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"onBeforeSetRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint40\",\"name\":\"startWithinField\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"deleteCount\",\"type\":\"uint40\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onBeforeSpliceDynamicData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onBeforeSpliceStaticData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementers should override the hook functions to provide custom logic. If any hooks are activated without overriding these functions, they revert.\",\"kind\":\"dev\",\"methods\":{\"onAfterDeleteRecord(bytes32,bytes32[],bytes32)\":{\"details\":\"This function should be overridden to provide custom logic.\",\"params\":{\"fieldLayout\":\"The layout of the field, see FieldLayout.sol.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"tableId\":\"The ID of the table where the record is to be deleted.\"}},\"onAfterSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)\":{\"details\":\"This function should be overridden to provide custom logic.\",\"params\":{\"dynamicData\":\"The dynamic data of the record.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"fieldLayout\":\"The layout of the field, see FieldLayout.sol.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"staticData\":\"The static data of the record.\",\"tableId\":\"The ID of the table where the record was set.\"}},\"onAfterSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)\":{\"details\":\"This function should be overridden to provide custom logic. Splice operations in dynamic data always reach the end of the dynamic data to avoid shifting data after the inserted or deleted data.\",\"params\":{\"data\":\"The data to be inserted into the dynamic data of the record at the start byte.\",\"deleteCount\":\"The number of bytes to delete in the dynamic data of the record.\",\"dynamicFieldIndex\":\"The index of the dynamic field.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"startWithinField\":\"The start byte position within the field for splicing.\",\"tableId\":\"The ID of the table where the data is to be spliced.\"}},\"onAfterSpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"details\":\"This function should be overridden to provide custom logic. Splice operations in static data always overwrite data starting at the start position, so the total length of the data remains the same and no data is shifted.\",\"params\":{\"data\":\"The data to be written to the static data of the record at the start byte.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"start\":\"The start byte position for splicing.\",\"tableId\":\"The ID of the table where the data is to be spliced.\"}},\"onBeforeDeleteRecord(bytes32,bytes32[],bytes32)\":{\"details\":\"This function should be overridden to provide custom logic.\",\"params\":{\"fieldLayout\":\"The layout of the field, see FieldLayout.sol.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"tableId\":\"The ID of the table where the record is to be deleted.\"}},\"onBeforeSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)\":{\"details\":\"This function should be overridden to provide custom logic.\",\"params\":{\"dynamicData\":\"The dynamic data of the record.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"fieldLayout\":\"The layout of the field, see FieldLayout.sol.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"staticData\":\"The static data of the record.\",\"tableId\":\"The ID of the table where the record is to be set.\"}},\"onBeforeSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)\":{\"details\":\"This function should be overridden to provide custom logic. Splice operations in dynamic data always reach the end of the dynamic data to avoid shifting data after the inserted or deleted data.\",\"params\":{\"data\":\"The data to be inserted into the dynamic data of the record at the start byte.\",\"deleteCount\":\"The number of bytes to delete in the dynamic data of the record.\",\"dynamicFieldIndex\":\"The index of the dynamic field.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"startWithinField\":\"The start byte position within the field for splicing.\",\"tableId\":\"The ID of the table where the data is to be spliced.\"}},\"onBeforeSpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"details\":\"This function should be overridden to provide custom logic. Splice operations in static data always overwrite data starting at the start position, so the total length of the data remains the same and no data is shifted.\",\"params\":{\"data\":\"The data to be written to the static data of the record at the start byte.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"start\":\"The start byte position for splicing.\",\"tableId\":\"The ID of the table where the data is to be spliced.\"}},\"supportsInterface(bytes4)\":{\"details\":\"This function is a part of the ERC-165 standard.\",\"params\":{\"interfaceId\":\"The ID of the interface to check.\"},\"returns\":{\"_0\":\"true if the interface is supported, false otherwise.\"}}},\"title\":\"Store Hook Contract\",\"version\":1},\"userdoc\":{\"errors\":{\"StoreHook_NotImplemented()\":[{\"notice\":\"Error emitted when a function is not implemented.\"}]},\"kind\":\"user\",\"methods\":{\"onAfterDeleteRecord(bytes32,bytes32[],bytes32)\":{\"notice\":\"Hook that runs after deleting a record.\"},\"onAfterSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)\":{\"notice\":\"Hook that runs after setting a record.\"},\"onAfterSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)\":{\"notice\":\"Hook that runs after splicing dynamic (variable length) data.\"},\"onAfterSpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"notice\":\"Hook that runs after splicing static (fixed length) data.\"},\"onBeforeDeleteRecord(bytes32,bytes32[],bytes32)\":{\"notice\":\"Hook that runs before deleting a record.\"},\"onBeforeSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)\":{\"notice\":\"Hook that runs before setting a record.\"},\"onBeforeSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)\":{\"notice\":\"Hook that runs before splicing dynamic (variable length) data.\"},\"onBeforeSpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"notice\":\"Hook that runs before splicing static (fixed length) data.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Check if the interface is supported.\"}},\"notice\":\"This abstract contract provides hooks for the storage operations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/StoreHook.sol\":\"StoreHook\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[\":@latticexyz/=node_modules/@latticexyz/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"src/FieldLayout.sol\":{\"keccak256\":\"0x2a0536cd6cecc479d0b81d5aad6380231f4d6873beadc54814d801c2036b02c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e07c041e19146a9ec258cc700a450b4d49440202895eb12f3bb17508427c23ba\",\"dweb:/ipfs/QmXoqrCGDSkuFgNSMURRFdjokjREL78nLDzNaUi6rjefy9\"]},\"src/IERC165.sol\":{\"keccak256\":\"0x2bbc3c43400c15a91a5cb35430a91309cb64a4d13a0a170eacec71dcf334feaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f44dfc9605067de539de07a76a34bf469faa9e6dad8c192abafc2e05860c7dd2\",\"dweb:/ipfs/QmX8xgG6XWokM7YFwFZvmMhuh1uhkSjxCMD2oTHjUVdapb\"]},\"src/IStoreHook.sol\":{\"keccak256\":\"0x9c3ba4c889db2cc2155ddfc966f5df45cf73739cacc358e0ed71ee9d34d9cef9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bc8e8abc3d5ce2af06c3a9f37ebe69cb287514c4572327b09d26121133646e5\",\"dweb:/ipfs/QmY7BmHTiGAJabiLZXLx2zsRs9HfZzK97kwmnwfCidcHZ5\"]},\"src/PackedCounter.sol\":{\"keccak256\":\"0xde8331e3c42277e26328f038008d6b5e474f33a9cdaa81206768e20a3781fbb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://868e07a24e82f670dbee006c4b927e4bd8c37513b64f8f9d2e89f1bea49ce611\",\"dweb:/ipfs/QmZz5rhFj2RqgxG5Euhya6BozheZjYA6zP45MNsQe5PhgJ\"]},\"src/ResourceId.sol\":{\"keccak256\":\"0x40983c580b8958e55db4520095934a535e98544ffe8228327e598973eb6647ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839d658fa2bb2b1f09a08149d2bf0c26a26c301ad2dda8154fc99458085a695d\",\"dweb:/ipfs/Qmd5jHHYrgqraPqF8bjzT4xyjsoPk8K7pkxXLLfz6MRT6d\"]},\"src/StoreHook.sol\":{\"keccak256\":\"0xd267686b3961da4d9a39e2cd39b89d7074ed27a516a03085bb69a6efea0a424e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8c96a99b6c8dab12799165b888ed5c647638a1114bec138dd65ad46c6d1cf34\",\"dweb:/ipfs/QmaMAkfEmRivfHts72hfYiiQiVc15QSRsXkPHM3d2AbFjf\"]},\"src/constants.sol\":{\"keccak256\":\"0x9e37c64c119ef07ad914bc589ee3f6d67946ab95877978c1ee3e2c1ffae07076\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fad47e542025382aa28e8171253e34f93b2f149434b67a26989542d70218793\",\"dweb:/ipfs/QmW6JsKNwPc6oAMrgcikgR2EPwMUtQANiuZSQSGCd29HHC\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.21+commit.d9974bed"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"StoreHook_NotImplemented"},{"inputs":[{"internalType":"ResourceId","name":"tableId","type":"bytes32"},{"internalType":"bytes32[]","name":"keyTuple","type":"bytes32[]"},{"internalType":"FieldLayout","name":"fieldLayout","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"onAfterDeleteRecord"},{"inputs":[{"internalType":"ResourceId","name":"tableId","type":"bytes32"},{"internalType":"bytes32[]","name":"keyTuple","type":"bytes32[]"},{"internalType":"bytes","name":"staticData","type":"bytes"},{"internalType":"PackedCounter","name":"encodedLengths","type":"bytes32"},{"internalType":"bytes","name":"dynamicData","type":"bytes"},{"internalType":"FieldLayout","name":"fieldLayout","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"onAfterSetRecord"},{"inputs":[{"internalType":"ResourceId","name":"tableId","type":"bytes32"},{"internalType":"bytes32[]","name":"keyTuple","type":"bytes32[]"},{"internalType":"uint8","name":"dynamicFieldIndex","type":"uint8"},{"internalType":"uint40","name":"startWithinField","type":"uint40"},{"internalType":"uint40","name":"deleteCount","type":"uint40"},{"internalType":"PackedCounter","name":"encodedLengths","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onAfterSpliceDynamicData"},{"inputs":[{"internalType":"ResourceId","name":"tableId","type":"bytes32"},{"internalType":"bytes32[]","name":"keyTuple","type":"bytes32[]"},{"internalType":"uint48","name":"start","type":"uint48"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onAfterSpliceStaticData"},{"inputs":[{"internalType":"ResourceId","name":"tableId","type":"bytes32"},{"internalType":"bytes32[]","name":"keyTuple","type":"bytes32[]"},{"internalType":"FieldLayout","name":"fieldLayout","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeDeleteRecord"},{"inputs":[{"internalType":"ResourceId","name":"tableId","type":"bytes32"},{"internalType":"bytes32[]","name":"keyTuple","type":"bytes32[]"},{"internalType":"bytes","name":"staticData","type":"bytes"},{"internalType":"PackedCounter","name":"encodedLengths","type":"bytes32"},{"internalType":"bytes","name":"dynamicData","type":"bytes"},{"internalType":"FieldLayout","name":"fieldLayout","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeSetRecord"},{"inputs":[{"internalType":"ResourceId","name":"tableId","type":"bytes32"},{"internalType":"bytes32[]","name":"keyTuple","type":"bytes32[]"},{"internalType":"uint8","name":"dynamicFieldIndex","type":"uint8"},{"internalType":"uint40","name":"startWithinField","type":"uint40"},{"internalType":"uint40","name":"deleteCount","type":"uint40"},{"internalType":"PackedCounter","name":"encodedLengths","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeSpliceDynamicData"},{"inputs":[{"internalType":"ResourceId","name":"tableId","type":"bytes32"},{"internalType":"bytes32[]","name":"keyTuple","type":"bytes32[]"},{"internalType":"uint48","name":"start","type":"uint48"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeSpliceStaticData"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"pure","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"onAfterDeleteRecord(bytes32,bytes32[],bytes32)":{"details":"This function should be overridden to provide custom logic.","params":{"fieldLayout":"The layout of the field, see FieldLayout.sol.","keyTuple":"An array representing the composite key for the record.","tableId":"The ID of the table where the record is to be deleted."}},"onAfterSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)":{"details":"This function should be overridden to provide custom logic.","params":{"dynamicData":"The dynamic data of the record.","encodedLengths":"The encoded lengths of the dynamic data of the record.","fieldLayout":"The layout of the field, see FieldLayout.sol.","keyTuple":"An array representing the composite key for the record.","staticData":"The static data of the record.","tableId":"The ID of the table where the record was set."}},"onAfterSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)":{"details":"This function should be overridden to provide custom logic. Splice operations in dynamic data always reach the end of the dynamic data to avoid shifting data after the inserted or deleted data.","params":{"data":"The data to be inserted into the dynamic data of the record at the start byte.","deleteCount":"The number of bytes to delete in the dynamic data of the record.","dynamicFieldIndex":"The index of the dynamic field.","encodedLengths":"The encoded lengths of the dynamic data of the record.","keyTuple":"An array representing the composite key for the record.","startWithinField":"The start byte position within the field for splicing.","tableId":"The ID of the table where the data is to be spliced."}},"onAfterSpliceStaticData(bytes32,bytes32[],uint48,bytes)":{"details":"This function should be overridden to provide custom logic. Splice operations in static data always overwrite data starting at the start position, so the total length of the data remains the same and no data is shifted.","params":{"data":"The data to be written to the static data of the record at the start byte.","keyTuple":"An array representing the composite key for the record.","start":"The start byte position for splicing.","tableId":"The ID of the table where the data is to be spliced."}},"onBeforeDeleteRecord(bytes32,bytes32[],bytes32)":{"details":"This function should be overridden to provide custom logic.","params":{"fieldLayout":"The layout of the field, see FieldLayout.sol.","keyTuple":"An array representing the composite key for the record.","tableId":"The ID of the table where the record is to be deleted."}},"onBeforeSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)":{"details":"This function should be overridden to provide custom logic.","params":{"dynamicData":"The dynamic data of the record.","encodedLengths":"The encoded lengths of the dynamic data of the record.","fieldLayout":"The layout of the field, see FieldLayout.sol.","keyTuple":"An array representing the composite key for the record.","staticData":"The static data of the record.","tableId":"The ID of the table where the record is to be set."}},"onBeforeSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)":{"details":"This function should be overridden to provide custom logic. Splice operations in dynamic data always reach the end of the dynamic data to avoid shifting data after the inserted or deleted data.","params":{"data":"The data to be inserted into the dynamic data of the record at the start byte.","deleteCount":"The number of bytes to delete in the dynamic data of the record.","dynamicFieldIndex":"The index of the dynamic field.","encodedLengths":"The encoded lengths of the dynamic data of the record.","keyTuple":"An array representing the composite key for the record.","startWithinField":"The start byte position within the field for splicing.","tableId":"The ID of the table where the data is to be spliced."}},"onBeforeSpliceStaticData(bytes32,bytes32[],uint48,bytes)":{"details":"This function should be overridden to provide custom logic. Splice operations in static data always overwrite data starting at the start position, so the total length of the data remains the same and no data is shifted.","params":{"data":"The data to be written to the static data of the record at the start byte.","keyTuple":"An array representing the composite key for the record.","start":"The start byte position for splicing.","tableId":"The ID of the table where the data is to be spliced."}},"supportsInterface(bytes4)":{"details":"This function is a part of the ERC-165 standard.","params":{"interfaceId":"The ID of the interface to check."},"returns":{"_0":"true if the interface is supported, false otherwise."}}},"version":1},"userdoc":{"kind":"user","methods":{"onAfterDeleteRecord(bytes32,bytes32[],bytes32)":{"notice":"Hook that runs after deleting a record."},"onAfterSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)":{"notice":"Hook that runs after setting a record."},"onAfterSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)":{"notice":"Hook that runs after splicing dynamic (variable length) data."},"onAfterSpliceStaticData(bytes32,bytes32[],uint48,bytes)":{"notice":"Hook that runs after splicing static (fixed length) data."},"onBeforeDeleteRecord(bytes32,bytes32[],bytes32)":{"notice":"Hook that runs before deleting a record."},"onBeforeSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)":{"notice":"Hook that runs before setting a record."},"onBeforeSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)":{"notice":"Hook that runs before splicing dynamic (variable length) data."},"onBeforeSpliceStaticData(bytes32,bytes32[],uint48,bytes)":{"notice":"Hook that runs before splicing static (fixed length) data."},"supportsInterface(bytes4)":{"notice":"Check if the interface is supported."}},"version":1}},"settings":{"remappings":["@latticexyz/=node_modules/@latticexyz/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/forge-std/src/"],"optimizer":{"enabled":true,"runs":3000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/StoreHook.sol":"StoreHook"},"libraries":{}},"sources":{"src/FieldLayout.sol":{"keccak256":"0x2a0536cd6cecc479d0b81d5aad6380231f4d6873beadc54814d801c2036b02c0","urls":["bzz-raw://e07c041e19146a9ec258cc700a450b4d49440202895eb12f3bb17508427c23ba","dweb:/ipfs/QmXoqrCGDSkuFgNSMURRFdjokjREL78nLDzNaUi6rjefy9"],"license":"MIT"},"src/IERC165.sol":{"keccak256":"0x2bbc3c43400c15a91a5cb35430a91309cb64a4d13a0a170eacec71dcf334feaf","urls":["bzz-raw://f44dfc9605067de539de07a76a34bf469faa9e6dad8c192abafc2e05860c7dd2","dweb:/ipfs/QmX8xgG6XWokM7YFwFZvmMhuh1uhkSjxCMD2oTHjUVdapb"],"license":"MIT"},"src/IStoreHook.sol":{"keccak256":"0x9c3ba4c889db2cc2155ddfc966f5df45cf73739cacc358e0ed71ee9d34d9cef9","urls":["bzz-raw://0bc8e8abc3d5ce2af06c3a9f37ebe69cb287514c4572327b09d26121133646e5","dweb:/ipfs/QmY7BmHTiGAJabiLZXLx2zsRs9HfZzK97kwmnwfCidcHZ5"],"license":"MIT"},"src/PackedCounter.sol":{"keccak256":"0xde8331e3c42277e26328f038008d6b5e474f33a9cdaa81206768e20a3781fbb1","urls":["bzz-raw://868e07a24e82f670dbee006c4b927e4bd8c37513b64f8f9d2e89f1bea49ce611","dweb:/ipfs/QmZz5rhFj2RqgxG5Euhya6BozheZjYA6zP45MNsQe5PhgJ"],"license":"MIT"},"src/ResourceId.sol":{"keccak256":"0x40983c580b8958e55db4520095934a535e98544ffe8228327e598973eb6647ed","urls":["bzz-raw://839d658fa2bb2b1f09a08149d2bf0c26a26c301ad2dda8154fc99458085a695d","dweb:/ipfs/Qmd5jHHYrgqraPqF8bjzT4xyjsoPk8K7pkxXLLfz6MRT6d"],"license":"MIT"},"src/StoreHook.sol":{"keccak256":"0xd267686b3961da4d9a39e2cd39b89d7074ed27a516a03085bb69a6efea0a424e","urls":["bzz-raw://c8c96a99b6c8dab12799165b888ed5c647638a1114bec138dd65ad46c6d1cf34","dweb:/ipfs/QmaMAkfEmRivfHts72hfYiiQiVc15QSRsXkPHM3d2AbFjf"],"license":"MIT"},"src/constants.sol":{"keccak256":"0x9e37c64c119ef07ad914bc589ee3f6d67946ab95877978c1ee3e2c1ffae07076","urls":["bzz-raw://3fad47e542025382aa28e8171253e34f93b2f149434b67a26989542d70218793","dweb:/ipfs/QmW6JsKNwPc6oAMrgcikgR2EPwMUtQANiuZSQSGCd29HHC"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/StoreHook.sol","id":49993,"exportedSymbols":{"ERC165_INTERFACE_ID":[44763],"FieldLayout":[44140],"IStoreHook":[45124],"PackedCounter":[45591],"ResourceId":[46218],"STORE_HOOK_INTERFACE_ID":[44982],"StoreHook":[49992]},"nodeType":"SourceUnit","src":"32:7682:40","nodes":[{"id":49792,"nodeType":"PragmaDirective","src":"32:25:40","nodes":[],"literals":["solidity",">=","0.8",".21"]},{"id":49795,"nodeType":"ImportDirective","src":"59:71:40","nodes":[],"absolutePath":"src/IStoreHook.sol","file":"./IStoreHook.sol","nameLocation":"-1:-1:-1","scope":49993,"sourceUnit":45125,"symbolAliases":[{"foreign":{"id":49793,"name":"IStoreHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45124,"src":"68:10:40","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":49794,"name":"STORE_HOOK_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44982,"src":"80:23:40","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":49797,"nodeType":"ImportDirective","src":"131:52:40","nodes":[],"absolutePath":"src/IERC165.sol","file":"./IERC165.sol","nameLocation":"-1:-1:-1","scope":49993,"sourceUnit":44773,"symbolAliases":[{"foreign":{"id":49796,"name":"ERC165_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44763,"src":"140:19:40","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":49799,"nodeType":"ImportDirective","src":"184:52:40","nodes":[],"absolutePath":"src/PackedCounter.sol","file":"./PackedCounter.sol","nameLocation":"-1:-1:-1","scope":49993,"sourceUnit":46215,"symbolAliases":[{"foreign":{"id":49798,"name":"PackedCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45591,"src":"193:13:40","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":49801,"nodeType":"ImportDirective","src":"237:48:40","nodes":[],"absolutePath":"src/FieldLayout.sol","file":"./FieldLayout.sol","nameLocation":"-1:-1:-1","scope":49993,"sourceUnit":44560,"symbolAliases":[{"foreign":{"id":49800,"name":"FieldLayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44140,"src":"246:11:40","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":49803,"nodeType":"ImportDirective","src":"286:46:40","nodes":[],"absolutePath":"src/ResourceId.sol","file":"./ResourceId.sol","nameLocation":"-1:-1:-1","scope":49993,"sourceUnit":46290,"symbolAliases":[{"foreign":{"id":49802,"name":"ResourceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46218,"src":"295:10:40","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":49992,"nodeType":"ContractDefinition","src":"609:7104:40","nodes":[{"id":49823,"nodeType":"FunctionDefinition","src":"900:176:40","nodes":[],"body":{"id":49822,"nodeType":"Block","src":"982:94:40","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":49820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":49816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49814,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49809,"src":"995:11:40","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":49815,"name":"STORE_HOOK_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44982,"src":"1010:23:40","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"995:38:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":49819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49817,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49809,"src":"1037:11:40","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":49818,"name":"ERC165_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44763,"src":"1052:19:40","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1037:34:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"995:76:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49813,"id":49821,"nodeType":"Return","src":"988:83:40"}]},"baseFunctions":[44771],"documentation":{"id":49807,"nodeType":"StructuredDocumentation","src":"655:242:40","text":" @notice Check if the interface is supported.\n @dev This function is a part of the ERC-165 standard.\n @param interfaceId The ID of the interface to check.\n @return true if the interface is supported, false otherwise."},"functionSelector":"01ffc9a7","implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"909:17:40","parameters":{"id":49810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49809,"mutability":"mutable","name":"interfaceId","nameLocation":"934:11:40","nodeType":"VariableDeclaration","scope":49823,"src":"927:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":49808,"name":"bytes4","nodeType":"ElementaryTypeName","src":"927:6:40","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"926:20:40"},"returnParameters":{"id":49813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":49823,"src":"976:4:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":49811,"name":"bool","nodeType":"ElementaryTypeName","src":"976:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"975:6:40"},"scope":49992,"stateMutability":"pure","virtual":true,"visibility":"public"},{"id":49847,"nodeType":"FunctionDefinition","src":"1625:267:40","nodes":[],"body":{"id":49846,"nodeType":"Block","src":"1848:44:40","nodes":[],"statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":49843,"name":"StoreHook_NotImplemented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44987,"src":"1861:24:40","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":49844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1861:26:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49845,"nodeType":"RevertStatement","src":"1854:33:40"}]},"baseFunctions":[45007],"documentation":{"id":49824,"nodeType":"StructuredDocumentation","src":"1080:542:40","text":" @notice Hook that runs before setting a record.\n @dev This function should be overridden to provide custom logic.\n @param tableId The ID of the table where the record is to be set.\n @param keyTuple An array representing the composite key for the record.\n @param staticData The static data of the record.\n @param encodedLengths The encoded lengths of the dynamic data of the record.\n @param dynamicData The dynamic data of the record.\n @param fieldLayout The layout of the field, see FieldLayout.sol."},"functionSelector":"57066c9c","implemented":true,"kind":"function","modifiers":[],"name":"onBeforeSetRecord","nameLocation":"1634:17:40","parameters":{"id":49841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49827,"mutability":"mutable","name":"tableId","nameLocation":"1668:7:40","nodeType":"VariableDeclaration","scope":49847,"src":"1657:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"},"typeName":{"id":49826,"nodeType":"UserDefinedTypeName","pathNode":{"id":49825,"name":"ResourceId","nameLocations":["1657:10:40"],"nodeType":"IdentifierPath","referencedDeclaration":46218,"src":"1657:10:40"},"referencedDeclaration":46218,"src":"1657:10:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"}},"visibility":"internal"},{"constant":false,"id":49830,"mutability":"mutable","name":"keyTuple","nameLocation":"1698:8:40","nodeType":"VariableDeclaration","scope":49847,"src":"1681:25:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":49828,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1681:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":49829,"nodeType":"ArrayTypeName","src":"1681:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":49832,"mutability":"mutable","name":"staticData","nameLocation":"1725:10:40","nodeType":"VariableDeclaration","scope":49847,"src":"1712:23:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":49831,"name":"bytes","nodeType":"ElementaryTypeName","src":"1712:5:40","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":49835,"mutability":"mutable","name":"encodedLengths","nameLocation":"1755:14:40","nodeType":"VariableDeclaration","scope":49847,"src":"1741:28:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PackedCounter_$45591","typeString":"PackedCounter"},"typeName":{"id":49834,"nodeType":"UserDefinedTypeName","pathNode":{"id":49833,"name":"PackedCounter","nameLocations":["1741:13:40"],"nodeType":"IdentifierPath","referencedDeclaration":45591,"src":"1741:13:40"},"referencedDeclaration":45591,"src":"1741:13:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PackedCounter_$45591","typeString":"PackedCounter"}},"visibility":"internal"},{"constant":false,"id":49837,"mutability":"mutable","name":"dynamicData","nameLocation":"1788:11:40","nodeType":"VariableDeclaration","scope":49847,"src":"1775:24:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":49836,"name":"bytes","nodeType":"ElementaryTypeName","src":"1775:5:40","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":49840,"mutability":"mutable","name":"fieldLayout","nameLocation":"1817:11:40","nodeType":"VariableDeclaration","scope":49847,"src":"1805:23:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_FieldLayout_$44140","typeString":"FieldLayout"},"typeName":{"id":49839,"nodeType":"UserDefinedTypeName","pathNode":{"id":49838,"name":"FieldLayout","nameLocations":["1805:11:40"],"nodeType":"IdentifierPath","referencedDeclaration":44140,"src":"1805:11:40"},"referencedDeclaration":44140,"src":"1805:11:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_FieldLayout_$44140","typeString":"FieldLayout"}},"visibility":"internal"}],"src":"1651:181:40"},"returnParameters":{"id":49842,"nodeType":"ParameterList","parameters":[],"src":"1848:0:40"},"scope":49992,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":49871,"nodeType":"FunctionDefinition","src":"2435:266:40","nodes":[],"body":{"id":49870,"nodeType":"Block","src":"2657:44:40","nodes":[],"statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":49867,"name":"StoreHook_NotImplemented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44987,"src":"2670:24:40","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":49868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2670:26:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49869,"nodeType":"RevertStatement","src":"2663:33:40"}]},"baseFunctions":[45027],"documentation":{"id":49848,"nodeType":"StructuredDocumentation","src":"1896:536:40","text":" @notice Hook that runs after setting a record.\n @dev This function should be overridden to provide custom logic.\n @param tableId The ID of the table where the record was set.\n @param keyTuple An array representing the composite key for the record.\n @param staticData The static data of the record.\n @param encodedLengths The encoded lengths of the dynamic data of the record.\n @param dynamicData The dynamic data of the record.\n @param fieldLayout The layout of the field, see FieldLayout.sol."},"functionSelector":"5b28cdaf","implemented":true,"kind":"function","modifiers":[],"name":"onAfterSetRecord","nameLocation":"2444:16:40","parameters":{"id":49865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49851,"mutability":"mutable","name":"tableId","nameLocation":"2477:7:40","nodeType":"VariableDeclaration","scope":49871,"src":"2466:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"},"typeName":{"id":49850,"nodeType":"UserDefinedTypeName","pathNode":{"id":49849,"name":"ResourceId","nameLocations":["2466:10:40"],"nodeType":"IdentifierPath","referencedDeclaration":46218,"src":"2466:10:40"},"referencedDeclaration":46218,"src":"2466:10:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"}},"visibility":"internal"},{"constant":false,"id":49854,"mutability":"mutable","name":"keyTuple","nameLocation":"2507:8:40","nodeType":"VariableDeclaration","scope":49871,"src":"2490:25:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":49852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2490:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":49853,"nodeType":"ArrayTypeName","src":"2490:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":49856,"mutability":"mutable","name":"staticData","nameLocation":"2534:10:40","nodeType":"VariableDeclaration","scope":49871,"src":"2521:23:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":49855,"name":"bytes","nodeType":"ElementaryTypeName","src":"2521:5:40","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":49859,"mutability":"mutable","name":"encodedLengths","nameLocation":"2564:14:40","nodeType":"VariableDeclaration","scope":49871,"src":"2550:28:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PackedCounter_$45591","typeString":"PackedCounter"},"typeName":{"id":49858,"nodeType":"UserDefinedTypeName","pathNode":{"id":49857,"name":"PackedCounter","nameLocations":["2550:13:40"],"nodeType":"IdentifierPath","referencedDeclaration":45591,"src":"2550:13:40"},"referencedDeclaration":45591,"src":"2550:13:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PackedCounter_$45591","typeString":"PackedCounter"}},"visibility":"internal"},{"constant":false,"id":49861,"mutability":"mutable","name":"dynamicData","nameLocation":"2597:11:40","nodeType":"VariableDeclaration","scope":49871,"src":"2584:24:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":49860,"name":"bytes","nodeType":"ElementaryTypeName","src":"2584:5:40","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":49864,"mutability":"mutable","name":"fieldLayout","nameLocation":"2626:11:40","nodeType":"VariableDeclaration","scope":49871,"src":"2614:23:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_FieldLayout_$44140","typeString":"FieldLayout"},"typeName":{"id":49863,"nodeType":"UserDefinedTypeName","pathNode":{"id":49862,"name":"FieldLayout","nameLocations":["2614:11:40"],"nodeType":"IdentifierPath","referencedDeclaration":44140,"src":"2614:11:40"},"referencedDeclaration":44140,"src":"2614:11:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_FieldLayout_$44140","typeString":"FieldLayout"}},"visibility":"internal"}],"src":"2460:181:40"},"returnParameters":{"id":49866,"nodeType":"ParameterList","parameters":[],"src":"2657:0:40"},"scope":49992,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":49889,"nodeType":"FunctionDefinition","src":"3332:193:40","nodes":[],"body":{"id":49888,"nodeType":"Block","src":"3481:44:40","nodes":[],"statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":49885,"name":"StoreHook_NotImplemented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44987,"src":"3494:24:40","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":49886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3494:26:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49887,"nodeType":"RevertStatement","src":"3487:33:40"}]},"baseFunctions":[45041],"documentation":{"id":49872,"nodeType":"StructuredDocumentation","src":"2705:624:40","text":" @notice Hook that runs before splicing static (fixed length) data.\n @dev This function should be overridden to provide custom logic.\n Splice operations in static data always overwrite data starting at\n the start position,\n so the total length of the data remains the same and no data is shifted.\n @param tableId The ID of the table where the data is to be spliced.\n @param keyTuple An array representing the composite key for the record.\n @param start The start byte position for splicing.\n @param data The data to be written to the static data of the record at the start byte."},"functionSelector":"964f667d","implemented":true,"kind":"function","modifiers":[],"name":"onBeforeSpliceStaticData","nameLocation":"3341:24:40","parameters":{"id":49883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49875,"mutability":"mutable","name":"tableId","nameLocation":"3382:7:40","nodeType":"VariableDeclaration","scope":49889,"src":"3371:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"},"typeName":{"id":49874,"nodeType":"UserDefinedTypeName","pathNode":{"id":49873,"name":"ResourceId","nameLocations":["3371:10:40"],"nodeType":"IdentifierPath","referencedDeclaration":46218,"src":"3371:10:40"},"referencedDeclaration":46218,"src":"3371:10:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"}},"visibility":"internal"},{"constant":false,"id":49878,"mutability":"mutable","name":"keyTuple","nameLocation":"3412:8:40","nodeType":"VariableDeclaration","scope":49889,"src":"3395:25:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":49876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3395:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":49877,"nodeType":"ArrayTypeName","src":"3395:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":49880,"mutability":"mutable","name":"start","nameLocation":"3433:5:40","nodeType":"VariableDeclaration","scope":49889,"src":"3426:12:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":49879,"name":"uint48","nodeType":"ElementaryTypeName","src":"3426:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":49882,"mutability":"mutable","name":"data","nameLocation":"3457:4:40","nodeType":"VariableDeclaration","scope":49889,"src":"3444:17:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":49881,"name":"bytes","nodeType":"ElementaryTypeName","src":"3444:5:40","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3365:100:40"},"returnParameters":{"id":49884,"nodeType":"ParameterList","parameters":[],"src":"3481:0:40"},"scope":49992,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":49907,"nodeType":"FunctionDefinition","src":"4155:192:40","nodes":[],"body":{"id":49906,"nodeType":"Block","src":"4303:44:40","nodes":[],"statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":49903,"name":"StoreHook_NotImplemented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44987,"src":"4316:24:40","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":49904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4316:26:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49905,"nodeType":"RevertStatement","src":"4309:33:40"}]},"baseFunctions":[45055],"documentation":{"id":49890,"nodeType":"StructuredDocumentation","src":"3529:623:40","text":" @notice Hook that runs after splicing static (fixed length) data.\n @dev This function should be overridden to provide custom logic.\n Splice operations in static data always overwrite data starting at\n the start position,\n so the total length of the data remains the same and no data is shifted.\n @param tableId The ID of the table where the data is to be spliced.\n @param keyTuple An array representing the composite key for the record.\n @param start The start byte position for splicing.\n @param data The data to be written to the static data of the record at the start byte."},"functionSelector":"a8ba8721","implemented":true,"kind":"function","modifiers":[],"name":"onAfterSpliceStaticData","nameLocation":"4164:23:40","parameters":{"id":49901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49893,"mutability":"mutable","name":"tableId","nameLocation":"4204:7:40","nodeType":"VariableDeclaration","scope":49907,"src":"4193:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"},"typeName":{"id":49892,"nodeType":"UserDefinedTypeName","pathNode":{"id":49891,"name":"ResourceId","nameLocations":["4193:10:40"],"nodeType":"IdentifierPath","referencedDeclaration":46218,"src":"4193:10:40"},"referencedDeclaration":46218,"src":"4193:10:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"}},"visibility":"internal"},{"constant":false,"id":49896,"mutability":"mutable","name":"keyTuple","nameLocation":"4234:8:40","nodeType":"VariableDeclaration","scope":49907,"src":"4217:25:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":49894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4217:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":49895,"nodeType":"ArrayTypeName","src":"4217:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":49898,"mutability":"mutable","name":"start","nameLocation":"4255:5:40","nodeType":"VariableDeclaration","scope":49907,"src":"4248:12:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":49897,"name":"uint48","nodeType":"ElementaryTypeName","src":"4248:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":49900,"mutability":"mutable","name":"data","nameLocation":"4279:4:40","nodeType":"VariableDeclaration","scope":49907,"src":"4266:17:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":49899,"name":"bytes","nodeType":"ElementaryTypeName","src":"4266:5:40","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4187:100:40"},"returnParameters":{"id":49902,"nodeType":"ParameterList","parameters":[],"src":"4303:0:40"},"scope":49992,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":49932,"nodeType":"FunctionDefinition","src":"5216:292:40","nodes":[],"body":{"id":49931,"nodeType":"Block","src":"5464:44:40","nodes":[],"statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":49928,"name":"StoreHook_NotImplemented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44987,"src":"5477:24:40","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":49929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5477:26:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49930,"nodeType":"RevertStatement","src":"5470:33:40"}]},"baseFunctions":[45076],"documentation":{"id":49908,"nodeType":"StructuredDocumentation","src":"4351:862:40","text":" @notice Hook that runs before splicing dynamic (variable length) data.\n @dev This function should be overridden to provide custom logic.\n Splice operations in dynamic data always reach the end of the dynamic data\n to avoid shifting data after the inserted or deleted data.\n @param tableId The ID of the table where the data is to be spliced.\n @param keyTuple An array representing the composite key for the record.\n @param dynamicFieldIndex The index of the dynamic field.\n @param startWithinField The start byte position within the field for splicing.\n @param deleteCount The number of bytes to delete in the dynamic data of the record.\n @param encodedLengths The encoded lengths of the dynamic data of the record.\n @param data The data to be inserted into the dynamic data of the record at the start byte."},"functionSelector":"55eb5a28","implemented":true,"kind":"function","modifiers":[],"name":"onBeforeSpliceDynamicData","nameLocation":"5225:25:40","parameters":{"id":49926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49911,"mutability":"mutable","name":"tableId","nameLocation":"5267:7:40","nodeType":"VariableDeclaration","scope":49932,"src":"5256:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"},"typeName":{"id":49910,"nodeType":"UserDefinedTypeName","pathNode":{"id":49909,"name":"ResourceId","nameLocations":["5256:10:40"],"nodeType":"IdentifierPath","referencedDeclaration":46218,"src":"5256:10:40"},"referencedDeclaration":46218,"src":"5256:10:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"}},"visibility":"internal"},{"constant":false,"id":49914,"mutability":"mutable","name":"keyTuple","nameLocation":"5297:8:40","nodeType":"VariableDeclaration","scope":49932,"src":"5280:25:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":49912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5280:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":49913,"nodeType":"ArrayTypeName","src":"5280:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":49916,"mutability":"mutable","name":"dynamicFieldIndex","nameLocation":"5317:17:40","nodeType":"VariableDeclaration","scope":49932,"src":"5311:23:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":49915,"name":"uint8","nodeType":"ElementaryTypeName","src":"5311:5:40","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":49918,"mutability":"mutable","name":"startWithinField","nameLocation":"5347:16:40","nodeType":"VariableDeclaration","scope":49932,"src":"5340:23:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":49917,"name":"uint40","nodeType":"ElementaryTypeName","src":"5340:6:40","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":49920,"mutability":"mutable","name":"deleteCount","nameLocation":"5376:11:40","nodeType":"VariableDeclaration","scope":49932,"src":"5369:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":49919,"name":"uint40","nodeType":"ElementaryTypeName","src":"5369:6:40","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":49923,"mutability":"mutable","name":"encodedLengths","nameLocation":"5407:14:40","nodeType":"VariableDeclaration","scope":49932,"src":"5393:28:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PackedCounter_$45591","typeString":"PackedCounter"},"typeName":{"id":49922,"nodeType":"UserDefinedTypeName","pathNode":{"id":49921,"name":"PackedCounter","nameLocations":["5393:13:40"],"nodeType":"IdentifierPath","referencedDeclaration":45591,"src":"5393:13:40"},"referencedDeclaration":45591,"src":"5393:13:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PackedCounter_$45591","typeString":"PackedCounter"}},"visibility":"internal"},{"constant":false,"id":49925,"mutability":"mutable","name":"data","nameLocation":"5440:4:40","nodeType":"VariableDeclaration","scope":49932,"src":"5427:17:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":49924,"name":"bytes","nodeType":"ElementaryTypeName","src":"5427:5:40","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5250:198:40"},"returnParameters":{"id":49927,"nodeType":"ParameterList","parameters":[],"src":"5464:0:40"},"scope":49992,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":49957,"nodeType":"FunctionDefinition","src":"6376:291:40","nodes":[],"body":{"id":49956,"nodeType":"Block","src":"6623:44:40","nodes":[],"statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":49953,"name":"StoreHook_NotImplemented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44987,"src":"6636:24:40","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":49954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6636:26:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49955,"nodeType":"RevertStatement","src":"6629:33:40"}]},"baseFunctions":[45097],"documentation":{"id":49933,"nodeType":"StructuredDocumentation","src":"5512:861:40","text":" @notice Hook that runs after splicing dynamic (variable length) data.\n @dev This function should be overridden to provide custom logic.\n Splice operations in dynamic data always reach the end of the dynamic data\n to avoid shifting data after the inserted or deleted data.\n @param tableId The ID of the table where the data is to be spliced.\n @param keyTuple An array representing the composite key for the record.\n @param dynamicFieldIndex The index of the dynamic field.\n @param startWithinField The start byte position within the field for splicing.\n @param deleteCount The number of bytes to delete in the dynamic data of the record.\n @param encodedLengths The encoded lengths of the dynamic data of the record.\n @param data The data to be inserted into the dynamic data of the record at the start byte."},"functionSelector":"63584533","implemented":true,"kind":"function","modifiers":[],"name":"onAfterSpliceDynamicData","nameLocation":"6385:24:40","parameters":{"id":49951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49936,"mutability":"mutable","name":"tableId","nameLocation":"6426:7:40","nodeType":"VariableDeclaration","scope":49957,"src":"6415:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"},"typeName":{"id":49935,"nodeType":"UserDefinedTypeName","pathNode":{"id":49934,"name":"ResourceId","nameLocations":["6415:10:40"],"nodeType":"IdentifierPath","referencedDeclaration":46218,"src":"6415:10:40"},"referencedDeclaration":46218,"src":"6415:10:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"}},"visibility":"internal"},{"constant":false,"id":49939,"mutability":"mutable","name":"keyTuple","nameLocation":"6456:8:40","nodeType":"VariableDeclaration","scope":49957,"src":"6439:25:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":49937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6439:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":49938,"nodeType":"ArrayTypeName","src":"6439:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":49941,"mutability":"mutable","name":"dynamicFieldIndex","nameLocation":"6476:17:40","nodeType":"VariableDeclaration","scope":49957,"src":"6470:23:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":49940,"name":"uint8","nodeType":"ElementaryTypeName","src":"6470:5:40","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":49943,"mutability":"mutable","name":"startWithinField","nameLocation":"6506:16:40","nodeType":"VariableDeclaration","scope":49957,"src":"6499:23:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":49942,"name":"uint40","nodeType":"ElementaryTypeName","src":"6499:6:40","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":49945,"mutability":"mutable","name":"deleteCount","nameLocation":"6535:11:40","nodeType":"VariableDeclaration","scope":49957,"src":"6528:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":49944,"name":"uint40","nodeType":"ElementaryTypeName","src":"6528:6:40","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":49948,"mutability":"mutable","name":"encodedLengths","nameLocation":"6566:14:40","nodeType":"VariableDeclaration","scope":49957,"src":"6552:28:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PackedCounter_$45591","typeString":"PackedCounter"},"typeName":{"id":49947,"nodeType":"UserDefinedTypeName","pathNode":{"id":49946,"name":"PackedCounter","nameLocations":["6552:13:40"],"nodeType":"IdentifierPath","referencedDeclaration":45591,"src":"6552:13:40"},"referencedDeclaration":45591,"src":"6552:13:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PackedCounter_$45591","typeString":"PackedCounter"}},"visibility":"internal"},{"constant":false,"id":49950,"mutability":"mutable","name":"data","nameLocation":"6599:4:40","nodeType":"VariableDeclaration","scope":49957,"src":"6586:17:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":49949,"name":"bytes","nodeType":"ElementaryTypeName","src":"6586:5:40","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6409:198:40"},"returnParameters":{"id":49952,"nodeType":"ParameterList","parameters":[],"src":"6623:0:40"},"scope":49992,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":49974,"nodeType":"FunctionDefinition","src":"7029:161:40","nodes":[],"body":{"id":49973,"nodeType":"Block","src":"7146:44:40","nodes":[],"statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":49970,"name":"StoreHook_NotImplemented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44987,"src":"7159:24:40","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":49971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7159:26:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49972,"nodeType":"RevertStatement","src":"7152:33:40"}]},"baseFunctions":[45110],"documentation":{"id":49958,"nodeType":"StructuredDocumentation","src":"6671:355:40","text":" @notice Hook that runs before deleting a record.\n @dev This function should be overridden to provide custom logic.\n @param tableId The ID of the table where the record is to be deleted.\n @param keyTuple An array representing the composite key for the record.\n @param fieldLayout The layout of the field, see FieldLayout.sol."},"functionSelector":"9faeaf45","implemented":true,"kind":"function","modifiers":[],"name":"onBeforeDeleteRecord","nameLocation":"7038:20:40","parameters":{"id":49968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49961,"mutability":"mutable","name":"tableId","nameLocation":"7070:7:40","nodeType":"VariableDeclaration","scope":49974,"src":"7059:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"},"typeName":{"id":49960,"nodeType":"UserDefinedTypeName","pathNode":{"id":49959,"name":"ResourceId","nameLocations":["7059:10:40"],"nodeType":"IdentifierPath","referencedDeclaration":46218,"src":"7059:10:40"},"referencedDeclaration":46218,"src":"7059:10:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"}},"visibility":"internal"},{"constant":false,"id":49964,"mutability":"mutable","name":"keyTuple","nameLocation":"7096:8:40","nodeType":"VariableDeclaration","scope":49974,"src":"7079:25:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":49962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7079:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":49963,"nodeType":"ArrayTypeName","src":"7079:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":49967,"mutability":"mutable","name":"fieldLayout","nameLocation":"7118:11:40","nodeType":"VariableDeclaration","scope":49974,"src":"7106:23:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_FieldLayout_$44140","typeString":"FieldLayout"},"typeName":{"id":49966,"nodeType":"UserDefinedTypeName","pathNode":{"id":49965,"name":"FieldLayout","nameLocations":["7106:11:40"],"nodeType":"IdentifierPath","referencedDeclaration":44140,"src":"7106:11:40"},"referencedDeclaration":44140,"src":"7106:11:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_FieldLayout_$44140","typeString":"FieldLayout"}},"visibility":"internal"}],"src":"7058:72:40"},"returnParameters":{"id":49969,"nodeType":"ParameterList","parameters":[],"src":"7146:0:40"},"scope":49992,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":49991,"nodeType":"FunctionDefinition","src":"7551:160:40","nodes":[],"body":{"id":49990,"nodeType":"Block","src":"7667:44:40","nodes":[],"statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":49987,"name":"StoreHook_NotImplemented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44987,"src":"7680:24:40","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":49988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7680:26:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49989,"nodeType":"RevertStatement","src":"7673:33:40"}]},"baseFunctions":[45123],"documentation":{"id":49975,"nodeType":"StructuredDocumentation","src":"7194:354:40","text":" @notice Hook that runs after deleting a record.\n @dev This function should be overridden to provide custom logic.\n @param tableId The ID of the table where the record is to be deleted.\n @param keyTuple An array representing the composite key for the record.\n @param fieldLayout The layout of the field, see FieldLayout.sol."},"functionSelector":"83b5c95b","implemented":true,"kind":"function","modifiers":[],"name":"onAfterDeleteRecord","nameLocation":"7560:19:40","parameters":{"id":49985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49978,"mutability":"mutable","name":"tableId","nameLocation":"7591:7:40","nodeType":"VariableDeclaration","scope":49991,"src":"7580:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"},"typeName":{"id":49977,"nodeType":"UserDefinedTypeName","pathNode":{"id":49976,"name":"ResourceId","nameLocations":["7580:10:40"],"nodeType":"IdentifierPath","referencedDeclaration":46218,"src":"7580:10:40"},"referencedDeclaration":46218,"src":"7580:10:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ResourceId_$46218","typeString":"ResourceId"}},"visibility":"internal"},{"constant":false,"id":49981,"mutability":"mutable","name":"keyTuple","nameLocation":"7617:8:40","nodeType":"VariableDeclaration","scope":49991,"src":"7600:25:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":49979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7600:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":49980,"nodeType":"ArrayTypeName","src":"7600:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":49984,"mutability":"mutable","name":"fieldLayout","nameLocation":"7639:11:40","nodeType":"VariableDeclaration","scope":49991,"src":"7627:23:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_FieldLayout_$44140","typeString":"FieldLayout"},"typeName":{"id":49983,"nodeType":"UserDefinedTypeName","pathNode":{"id":49982,"name":"FieldLayout","nameLocations":["7627:11:40"],"nodeType":"IdentifierPath","referencedDeclaration":44140,"src":"7627:11:40"},"referencedDeclaration":44140,"src":"7627:11:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_FieldLayout_$44140","typeString":"FieldLayout"}},"visibility":"internal"}],"src":"7579:72:40"},"returnParameters":{"id":49986,"nodeType":"ParameterList","parameters":[],"src":"7667:0:40"},"scope":49992,"stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"abstract":true,"baseContracts":[{"baseName":{"id":49805,"name":"IStoreHook","nameLocations":["640:10:40"],"nodeType":"IdentifierPath","referencedDeclaration":45124,"src":"640:10:40"},"id":49806,"nodeType":"InheritanceSpecifier","src":"640:10:40"}],"canonicalName":"StoreHook","contractDependencies":[],"contractKind":"contract","documentation":{"id":49804,"nodeType":"StructuredDocumentation","src":"334:274:40","text":" @title Store Hook Contract\n @notice This abstract contract provides hooks for the storage operations.\n @dev Implementers should override the hook functions to provide custom logic.\n If any hooks are activated without overriding these functions, they revert."},"fullyImplemented":true,"linearizedBaseContracts":[49992,45124,44772],"name":"StoreHook","nameLocation":"627:9:40","scope":49993,"usedErrors":[44987],"usedEvents":[]}],"license":"MIT"},"id":40}