import { ImportDatum, ContractInterfaceFunction, ContractInterfaceError, RelativeImportDatum } from '@latticexyz/common/codegen';
import { StoreConfig } from '@latticexyz/store';
import { W as WorldConfig } from '../../types-3e6fc97f.js';
import 'zod';
import '@latticexyz/config';
import '@latticexyz/common/type-utils';

interface RenderSystemInterfaceOptions {
    /** List of symbols to import, and their file paths */
    imports: ImportDatum[];
    name: string;
    functionPrefix: string;
    functions: ContractInterfaceFunction[];
    errors: ContractInterfaceError[];
}
interface RenderWorldOptions {
    /** List of symbols to import, and their file paths */
    imports: RelativeImportDatum[];
    /** Name of the interface to render */
    interfaceName: string;
    /** Path for store package imports */
    storeImportPath: string;
    /** Path for world package imports */
    worldImportPath: string;
}

declare function renderSystemInterface(options: RenderSystemInterfaceOptions): string;

declare function renderWorld(options: RenderWorldOptions): string;

declare function worldgen(config: StoreConfig & WorldConfig, existingContracts: {
    path: string;
    basename: string;
}[], outputBaseDirectory: string): Promise<void>;

export { RenderSystemInterfaceOptions, RenderWorldOptions, renderSystemInterface, renderWorld, worldgen };
