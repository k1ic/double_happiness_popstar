export { mudConfig, mudCoreConfig, resolveTableId } from '@latticexyz/store/register';
import { OrDefaults } from '@latticexyz/common/type-utils';
import { MUDCoreUserConfig } from '@latticexyz/config';
import { f as WorldUserConfig, W as WorldConfig, b as WORLD_DEFAULTS, e as ExpandSystemsConfig } from '../../types-3e6fc97f.js';
import 'zod';

declare module "@latticexyz/config" {
    interface MUDCoreUserConfig extends WorldUserConfig {
    }
    interface MUDCoreConfig extends WorldConfig {
    }
}
declare module "@latticexyz/store/register" {
    interface ExpandMUDUserConfig<T extends MUDCoreUserConfig> extends OrDefaults<T, {
        worldContractName: typeof WORLD_DEFAULTS.worldContractName;
        worldInterfaceName: typeof WORLD_DEFAULTS.worldInterfaceName;
        excludeSystems: typeof WORLD_DEFAULTS.excludeSystems;
        postDeployScript: typeof WORLD_DEFAULTS.postDeployScript;
        deploysDirectory: typeof WORLD_DEFAULTS.deploysDirectory;
        worldsFile: typeof WORLD_DEFAULTS.worldsFile;
        worldgenDirectory: typeof WORLD_DEFAULTS.worldgenDirectory;
        worldImportPath: typeof WORLD_DEFAULTS.worldImportPath;
        modules: typeof WORLD_DEFAULTS.modules;
    }> {
        systems: ExpandSystemsConfig<T["systems"] extends Record<string, unknown> ? T["systems"] : Record<string, never>>;
    }
}
